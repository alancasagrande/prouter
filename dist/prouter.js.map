{"version":3,"file":"prouter.js","sourceRoot":"/source/","sources":["prouter.ts"],"names":["_getRouteKeys","_routeToRegExp","_clearSlashes","_extractParameters","_parseQuery","_prepareArguments","RoutingLevel","applyNested","apply"],"mappings":"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","sourcesContent":["declare const global: any;\r\n\r\n// Establish the root object, `window` (`self`) in the browser, or `global` on the server.\r\n// We use `self` instead of `window` for `WebWorker` support.\r\nconst _global = (typeof self === 'object' && self.self === self && self) ||\r\n    (typeof global === 'object' && global.global === global && global);\r\n\r\n\r\nconst _ALLOWED_MODES = ['node', 'hash', 'history'];\r\nconst _DEFAULT_OPTIONS = { mode: 'node', keys: true, root: '/', rerouting: true };\r\n\r\n// parse regular expression\r\nconst _OPTIONAL_PARAM = /\\((.*?)\\)/g;\r\nconst _NAMED_PARAM = /(\\(\\?)?:\\w+/g;\r\nconst _SPLAT_PARAM = /\\*\\w+/g;\r\nconst _ESCAPE_REG_EXP = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\nconst _DEFAULT_ROUTE = /.*/;\r\n\r\n\r\nfunction _getRouteKeys(path: string): Object[] {\r\n    const keys = path.match(/:([^\\/]+)/g);\r\n    for (let i = 0, l = keys ? keys.length : 0; i < l; i++) {\r\n        keys[i] = keys[i].replace(/[:\\(\\)]/g, '');\r\n    }\r\n    return keys;\r\n}\r\n\r\nfunction _routeToRegExp(route: string): RegExp {\r\n    route = route.replace(_ESCAPE_REG_EXP, '\\\\$&')\r\n        .replace(_OPTIONAL_PARAM, '(?:$1)?')\r\n        .replace(_NAMED_PARAM, function(match, optional) {\r\n            return optional ? match : '([^/?]+)';\r\n        })\r\n        .replace(_SPLAT_PARAM, '([^?]*)');\r\n\r\n    return new RegExp('^' + route + '(?:\\\\?*([^/]*))');\r\n}\r\n\r\nfunction _clearSlashes(path: string): string {\r\n    return path.replace(/\\/$/, '').replace(/^\\//, '');\r\n}\r\n\r\nfunction _extractParameters(route: RegExp, fragment: string): Object[] {\r\n    const params = route.exec(fragment).slice(1);\r\n    return params.map(function(param, i) {\r\n        if (i === params.length - 1) {\r\n          return param || null;\r\n        }\r\n        return param ? _global.decodeURIComponent(param) : null;\r\n    });\r\n}\r\n\r\nfunction _parseQuery(qstr: string): Object {\r\n    const query = {};\r\n    const params = qstr.split('&');\r\n    for (let i = 0; i < params.length; i++) {\r\n        const pair = params[i].split('=');\r\n        query[_global.decodeURIComponent(pair[0])] = _global.decodeURIComponent(pair[1]);\r\n    }\r\n    return query;\r\n}\r\n\r\nfunction _prepareArguments(parameters: any[], keys: any[]) {\r\n\r\n    const wrapper: any = {};\r\n    const lastIndex = parameters.length - 1;\r\n    const query = parameters[lastIndex];\r\n\r\n    if (keys && keys.length > 0) {\r\n        for (let i = 0; i < keys.length; i++) {\r\n            wrapper[keys[i]] = parameters[i];\r\n        }\r\n        if (parameters[keys.length]) {\r\n            wrapper.query = _parseQuery(parameters[keys.length]);\r\n        }\r\n        parameters = [wrapper];\r\n    } else if (query && query.indexOf('=') > -1) {\r\n        parameters[lastIndex] = _parseQuery(query);\r\n    }\r\n\r\n    return parameters;\r\n}\r\n\r\nfunction RoutingLevel() {\r\n    this._routes = [];\r\n    this._options = JSON.parse(JSON.stringify(_DEFAULT_OPTIONS));\r\n}\r\n\r\nRoutingLevel.prototype.add = function(path: any, callback?: Function, options?: any) {\r\n\r\n    let keys: Object[];\r\n    let re: RegExp;\r\n\r\n    if (typeof path === 'function') {\r\n        options = callback;\r\n        callback = <any> path;\r\n        re = _DEFAULT_ROUTE;\r\n    } else {\r\n        keys = _getRouteKeys(path);\r\n        re = _routeToRegExp(path);\r\n    }\r\n\r\n    this._routes.push({\r\n        path: re,\r\n        callback: callback,\r\n        keys: keys,\r\n        alias: (options && options.alias) ? options.alias : path,\r\n        facade: null\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nRoutingLevel.prototype.remove = function(alias: string) {\r\n\r\n    for (let i = this._routes.length - 1; i > -1; i -= 1) {\r\n        let r = this._routes[i];\r\n        if (alias === r.alias || alias === r.callback || alias.toString() === r.path.toString()) {\r\n            this._routes.splice(i, 1);\r\n        } else if (r._routes.length > 0) {\r\n            for (let j = r._routes.length - 1; j > -1; j -= 1) {\r\n                r._routes[j].remove(alias);\r\n            }\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nRoutingLevel.prototype.check = function(fragment: string, array: any[], lastURL: string) {\r\n\r\n    for (let i = 0; i < this._routes.length; i++) {\r\n        const route = this._routes[i];\r\n        const match = fragment.match(route.path);\r\n        if (match) {\r\n            let params = _extractParameters(route.path, fragment);\r\n            const keys = this._options.keys ? route.keys : null;\r\n            params = _prepareArguments(params, keys);\r\n            const should = (fragment.slice(0, match[0].length) !== lastURL.slice(0, match[0].length));\r\n\r\n            const node: any = {\r\n                callback: route.callback,\r\n                params: params,\r\n                routes: [],\r\n                rootRerouting: this._options.rerouting || should\r\n            };\r\n\r\n            array.push(node);\r\n\r\n            if (route.facade) {\r\n                fragment = fragment.slice(match[0].length, fragment.length);\r\n                lastURL = lastURL.slice(match[0].length, lastURL.length);\r\n                route.facade.check(fragment, node.routes, lastURL);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\nRoutingLevel.prototype.drop = function() {\r\n    this._routes = [];\r\n    this.config(_DEFAULT_OPTIONS);\r\n    return this;\r\n};\r\n\r\nRoutingLevel.prototype.config = function(options: any) {\r\n    if (typeof options === 'object') {\r\n        this._options.keys = (typeof options.keys === 'boolean') ? options.keys : this._options.keys;\r\n        this._options.mode = (_ALLOWED_MODES.indexOf(options.mode) !== -1) ? options.mode : this._options.mode;\r\n        this._options.root = options.root ? '/' + _clearSlashes(options.root) + '/' : this._options.root;\r\n        this._options.rerouting = (typeof options.rerouting === 'boolean') ? options.rerouting : this._options.rerouting;\r\n    }\r\n    return this;\r\n};\r\n\r\nRoutingLevel.prototype.to = function(alias: string) {\r\n    let subrouter: any;\r\n    for (let i = 0; i < this._routes.length; i++) {\r\n        const route = this._routes[i];\r\n        if (alias === route.alias) {\r\n            subrouter = route.facade;\r\n            if (!subrouter) {\r\n                route.facade = subrouter = (new RoutingLevel()).config(this._options);\r\n            }\r\n        }\r\n    }\r\n\r\n    return subrouter;\r\n};\r\n\r\nconst Router = (function(facade: any) {\r\n\r\n    let router: any = {}, lastURL = '', rollback = false;\r\n\r\n    function applyNested(routes: any[]) {\r\n        return function(param: any) {\r\n            if (param === false) {\r\n                rollback = true;\r\n                router.navigate(lastURL);\r\n            } else if (typeof param === 'string') {\r\n                router.route(param);\r\n            } else if (routes && routes.length) {\r\n                apply(routes);\r\n            }\r\n        };\r\n    }\r\n\r\n    function apply(routes: any[]) {\r\n\r\n        let falseToReject: boolean;\r\n\r\n        if (routes) {\r\n            for (let i = 0; i < routes.length; i += 1) {\r\n                const route = routes[i];\r\n                if (route.rootRerouting) {\r\n                    falseToReject = route.callback.apply(null, route.params);\r\n                }\r\n                applyNested(route.routes)(falseToReject);\r\n            }\r\n        }\r\n    }\r\n\r\n    router.drop = function() {\r\n        lastURL = '';\r\n        return facade.drop();\r\n    };\r\n\r\n    router.listen = function() {\r\n\r\n        let self = this, current = this.getCurrent();\r\n\r\n        clearInterval(this._interval);\r\n\r\n        this._interval = setInterval(function() {\r\n            const location = router.getCurrent();\r\n            if (current !== location) {\r\n                current = location;\r\n                self.check(self.getCurrent());\r\n            }\r\n        }, 50);\r\n\r\n        _global.onpopstate = function(e: PopStateEvent) {\r\n            if (e.state !== null && e.state !== undefined) {\r\n                _global.clearInterval(self._interval);\r\n                self.check(self.getCurrent());\r\n            }\r\n        };\r\n    };\r\n\r\n    router.check = function(path: string) {\r\n        apply(facade.check(path, [], lastURL));\r\n        return facade;\r\n    };\r\n\r\n    router.navigate = function(path: string) {\r\n        const mode = facade._options.mode;\r\n        switch (mode) {\r\n            case 'history':\r\n                _global.history.pushState(null, null, facade._options.root + _clearSlashes(path));\r\n                break;\r\n            case 'hash':\r\n                _global.location.href = _global.location.href.replace(/#(.*)$/, '') + '#' + path;\r\n                break;\r\n            case 'node':\r\n                lastURL = path;\r\n                break;\r\n        }\r\n        return facade;\r\n    };\r\n\r\n    router.route = function(path: string) {\r\n        if (facade._options.mode === 'node') {\r\n            this.check(path);\r\n        }\r\n        if (!rollback) {\r\n            this.navigate(path);\r\n        }\r\n        rollback = false;\r\n        return facade;\r\n    };\r\n\r\n    router.config = function(options: Object) {\r\n        return facade.config(options);\r\n    };\r\n\r\n    router.to = function(alias: string) {\r\n        return facade.to(alias);\r\n    };\r\n\r\n    router.add = function(path: any, callback?: Function, alias?: string) {\r\n        return facade.add(path, callback, alias);\r\n    };\r\n\r\n    router.remove = function(alias: string) {\r\n        return facade.remove(alias);\r\n    };\r\n\r\n    router.getCurrent = function(): string {\r\n\r\n        const mode = facade._options.mode;\r\n        const root = facade._options.root;\r\n        let fragment = lastURL;\r\n\r\n        if (mode === 'history') {\r\n            fragment = _clearSlashes(_global.decodeURI(_global.location.pathname + _global.location.search));\r\n            fragment = fragment.replace(/\\?(.*)$/, '');\r\n            fragment = root !== '/' ? fragment.replace(root, '') : fragment;\r\n            fragment = _clearSlashes(fragment);\r\n        } else if (mode === 'hash') {\r\n            const match = _global.location.href.match(/#(.*)$/);\r\n            fragment = match ? match[1] : '';\r\n            fragment = _clearSlashes(fragment);\r\n        }\r\n\r\n        return fragment;\r\n    };\r\n\r\n    return router;\r\n\r\n})(new RoutingLevel());\r\n"]}