{"version":3,"file":"prouter.js","sourceRoot":"/source/","sources":["prouter.ts"],"names":["RouteHelper","RouteHelper.constructor","RouteHelper._getRouteKeys","RouteHelper._routeToRegExp","RouteHelper._clearSlashes","RouteHelper._extractParameters","RouteHelper._parseQuery","RouteHelper._prepareArguments","RoutingLevel","RoutingLevel.constructor","RoutingLevel.add","RoutingLevel.remove","RoutingLevel.check","RoutingLevel.drop","RoutingLevel.config","RoutingLevel.to","drop","listen","check","navigate","route","config","to","add","remove","getCurrent","applyNested","apply"],"mappings":"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IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,OAAOA,CAACA,kBAAkBA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;QACrFA,CAACA;QACDA,MAAMA,CAACA,KAAKA,CAACA;IACjBA,CAACA;IAEMN,6BAAiBA,GAAxBA,UAAyBA,UAAiBA,EAAEA,IAAWA;QAEnDO,IAAMA,OAAOA,GAAQA,EAAEA,CAACA;QACxBA,IAAMA,SAASA,GAAGA,UAAUA,CAACA,MAAMA,GAAGA,CAACA,CAACA;QACxCA,IAAMA,KAAKA,GAAGA,UAAUA,CAACA,SAASA,CAACA,CAACA;QAEpCA,EAAEA,CAACA,CAACA,IAAIA,IAAIA,IAAIA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA;YAC1BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACnCA,OAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAUA,CAACA,CAACA,CAACA,CAACA;YACrCA,CAACA;YACDA,EAAEA,CAACA,CAACA,UAAUA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;gBAC1BA,OAAOA,CAACA,KAAKA,GAAGA,WAAWA,CAACA,WAAWA,CAACA,UAAUA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACrEA,CAACA;YACDA,UAAUA,GAAGA,CAACA,OAAOA,CAACA,CAACA;QAC3BA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,KAAKA,IAAIA,KAAKA,CAACA,OAAOA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;YAC1CA,UAAUA,CAACA,SAASA,CAACA,GAAGA,WAAWA,CAACA,WAAWA,CAACA,KAAKA,CAACA,CAACA;QAC3DA,CAACA;QAEDA,MAAMA,CAACA,UAAUA,CAACA;IACtBA,CAACA;IACLP,kBAACA;AAADA,CAACA,AAnED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","sourcesContent":["declare const global: any;\r\n\r\n// Establish the root object, `window` (`self`) in the browser, or `global` on the server.\r\n// We use `self` instead of `window` for `WebWorker` support.\r\nconst _global = (typeof self === 'object' && self.self === self && self) ||\r\n    (typeof global === 'object' && global.global === global && global);\r\n\r\nconst _ALLOWED_MODES = ['node', 'hash', 'history'];\r\nconst _DEFAULT_OPTIONS = { mode: 'node', keys: true, root: '/', rerouting: true };\r\n\r\n// parse regular expression\r\nconst _OPTIONAL_PARAM = /\\((.*?)\\)/g;\r\nconst _NAMED_PARAM = /(\\(\\?)?:\\w+/g;\r\nconst _SPLAT_PARAM = /\\*\\w+/g;\r\nconst _ESCAPE_REG_EXP = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\nconst _DEFAULT_ROUTE = /.*/;\r\n\r\n\r\nclass RouteHelper {\r\n\r\n    static _getRouteKeys(path: string): Object[] {\r\n        const keys = path.match(/:([^\\/]+)/g);\r\n        if (!keys) {\r\n            return keys;\r\n        }\r\n        for (let i = 0; i < keys.length; i++) {\r\n            keys[i] = keys[i].replace(/[:\\(\\)]/g, '');\r\n        }\r\n        return keys;\r\n    }\r\n\r\n    static _routeToRegExp(route: string): RegExp {\r\n        route = route.replace(_ESCAPE_REG_EXP, '\\\\$&')\r\n            .replace(_OPTIONAL_PARAM, '(?:$1)?')\r\n            .replace(_NAMED_PARAM, function(match, optional) {\r\n                return optional ? match : '([^/?]+)';\r\n            })\r\n            .replace(_SPLAT_PARAM, '([^?]*)');\r\n        return new RegExp('^' + route + '(?:\\\\?*([^/]*))');\r\n    }\r\n\r\n    static _clearSlashes(path: string): string {\r\n        return path.replace(/\\/$/, '').replace(/^\\//, '');\r\n    }\r\n\r\n    static _extractParameters(route: RegExp, fragment: string): Object[] {\r\n        const params = route.exec(fragment).slice(1);\r\n        return params.map(function(param, i) {\r\n            if (i === params.length - 1) {\r\n                return param || null;\r\n            }\r\n            return param ? _global.decodeURIComponent(param) : null;\r\n        });\r\n    }\r\n\r\n    private static _parseQuery(qstr: string): Object {\r\n        const query = {};\r\n        const params = qstr.split('&');\r\n        for (let i = 0; i < params.length; i++) {\r\n            const pair = params[i].split('=');\r\n            query[_global.decodeURIComponent(pair[0])] = _global.decodeURIComponent(pair[1]);\r\n        }\r\n        return query;\r\n    }\r\n\r\n    static _prepareArguments(parameters: any[], keys: any[]): any[] {\r\n\r\n        const wrapper: any = {};\r\n        const lastIndex = parameters.length - 1;\r\n        const query = parameters[lastIndex];\r\n\r\n        if (keys && keys.length > 0) {\r\n            for (let i = 0; i < keys.length; i++) {\r\n                wrapper[keys[i]] = parameters[i];\r\n            }\r\n            if (parameters[keys.length]) {\r\n                wrapper.query = RouteHelper._parseQuery(parameters[keys.length]);\r\n            }\r\n            parameters = [wrapper];\r\n        } else if (query && query.indexOf('=') > -1) {\r\n            parameters[lastIndex] = RouteHelper._parseQuery(query);\r\n        }\r\n\r\n        return parameters;\r\n    }\r\n}\r\n\r\n\r\nclass RoutingLevel {\r\n\r\n    _routes: any[] = [];\r\n    _options = JSON.parse(JSON.stringify(_DEFAULT_OPTIONS));\r\n\r\n    add(path: any, callback?: Function, options?: any): RoutingLevel {\r\n\r\n        let keys: Object[];\r\n        let re: RegExp;\r\n\r\n        if (typeof path === 'function') {\r\n            options = callback;\r\n            callback = <any> path;\r\n            re = _DEFAULT_ROUTE;\r\n        } else {\r\n            keys = RouteHelper._getRouteKeys(path);\r\n            re = RouteHelper._routeToRegExp(path);\r\n        }\r\n\r\n        this._routes.push({\r\n            path: re,\r\n            callback: callback,\r\n            keys: keys,\r\n            alias: (options && options.alias) ? options.alias : path,\r\n            facade: null\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    remove(alias: string): RoutingLevel {\r\n\r\n        for (let i = this._routes.length - 1; i >= 0; i--) {\r\n            const r = this._routes[i];\r\n            if (alias === r.alias || alias === r.callback || alias === r.path) {\r\n                this._routes.splice(i, 1);\r\n            } else if (r._routes.length > 0) {\r\n                for (let j = r._routes.length - 1; j >= 0; j--) {\r\n                    r._routes[j].remove(alias);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check(fragment: string, array: any[], lastURL: string): any[] {\r\n\r\n        for (let i = 0; i < this._routes.length; i++) {\r\n\r\n            const route = this._routes[i];\r\n            const match = fragment.match(route.path);\r\n\r\n            if (match) {\r\n\r\n                let params = RouteHelper._extractParameters(route.path, fragment);\r\n                const keys = this._options.keys ? route.keys : null;\r\n                params = RouteHelper._prepareArguments(params, keys);\r\n                const should = (fragment.slice(0, match[0].length) !== lastURL.slice(0, match[0].length));\r\n\r\n                const node: any = {\r\n                    callback: route.callback,\r\n                    params: params,\r\n                    routes: [],\r\n                    rootRerouting: this._options.rerouting || should\r\n                };\r\n\r\n                array.push(node);\r\n\r\n                if (route.facade) {\r\n                    fragment = fragment.slice(match[0].length, fragment.length);\r\n                    lastURL = lastURL.slice(match[0].length, lastURL.length);\r\n                    route.facade.check(fragment, node.routes, lastURL);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    drop(): RoutingLevel {\r\n        this._routes = [];\r\n        this.config(_DEFAULT_OPTIONS);\r\n        return this;\r\n    }\r\n\r\n    config(options: any): RoutingLevel {\r\n        if (options) {\r\n            this._options.keys = (typeof options.keys === 'boolean') ? options.keys : this._options.keys;\r\n            this._options.mode = (_ALLOWED_MODES.indexOf(options.mode) !== -1) ? options.mode : this._options.mode;\r\n            this._options.root = options.root ? '/' + RouteHelper._clearSlashes(options.root) + '/' : this._options.root;\r\n            this._options.rerouting = (typeof options.rerouting === 'boolean') ? options.rerouting : this._options.rerouting;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    to(alias: string): RoutingLevel {\r\n        let subrouter: RoutingLevel;\r\n        for (let i = 0; i < this._routes.length; i++) {\r\n            const route = this._routes[i];\r\n            if (alias === route.alias) {\r\n                subrouter = route.facade;\r\n                if (!subrouter) {\r\n                    subrouter = (new RoutingLevel()).config(this._options);\r\n                    route.facade = subrouter;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return subrouter;\r\n    }\r\n}\r\n\r\n\r\nconst Router = (function(facade: RoutingLevel) {\r\n\r\n    let lastURL = '';\r\n    let rollback = false;\r\n\r\n    const router = {\r\n\r\n        drop(): RoutingLevel {\r\n            lastURL = '';\r\n            return facade.drop();\r\n        },\r\n\r\n        listen() {\r\n\r\n            const self = this;\r\n            let current = this.getCurrent();\r\n\r\n            clearInterval(this._interval);\r\n\r\n            this._interval = setInterval(function() {\r\n                const location = router.getCurrent();\r\n                if (current !== location) {\r\n                    current = location;\r\n                    self.check(self.getCurrent());\r\n                }\r\n            }, 50);\r\n\r\n            _global.onpopstate = function(e: PopStateEvent) {\r\n                if (e.state !== null && e.state !== undefined) {\r\n                    _global.clearInterval(self._interval);\r\n                    self.check(self.getCurrent());\r\n                }\r\n            };\r\n        },\r\n\r\n        check(path: string): RoutingLevel {\r\n            apply(facade.check(path, [], lastURL));\r\n            return facade;\r\n        },\r\n\r\n        navigate(path: string): RoutingLevel {\r\n            const mode = facade._options.mode;\r\n            switch (mode) {\r\n                case 'history':\r\n                    _global.history.pushState(null, null, facade._options.root + RouteHelper._clearSlashes(path));\r\n                    break;\r\n                case 'hash':\r\n                    _global.location.href = _global.location.href.replace(/#(.*)$/, '') + '#' + path;\r\n                    break;\r\n                case 'node':\r\n                    lastURL = path;\r\n                    break;\r\n            }\r\n            return facade;\r\n        },\r\n\r\n        route(path: string): RoutingLevel {\r\n            if (facade._options.mode === 'node') {\r\n                this.check(path);\r\n            }\r\n            if (!rollback) {\r\n                this.navigate(path);\r\n            }\r\n            rollback = false;\r\n            return facade;\r\n        },\r\n\r\n        config(options: Object): RoutingLevel {\r\n            return facade.config(options);\r\n        },\r\n\r\n        to(alias: string): RoutingLevel {\r\n            return facade.to(alias);\r\n        },\r\n\r\n        add(path: any, callback?: Function, alias?: string): RoutingLevel {\r\n            return facade.add(path, callback, alias);\r\n        },\r\n\r\n        remove(alias: string): RoutingLevel {\r\n            return facade.remove(alias);\r\n        },\r\n\r\n        getCurrent(): string {\r\n\r\n            const mode = facade._options.mode;\r\n            const root = facade._options.root;\r\n            let fragment = lastURL;\r\n\r\n            if (mode === 'history') {\r\n                fragment = RouteHelper._clearSlashes(_global.decodeURI(_global.location.pathname + _global.location.search));\r\n                fragment = fragment.replace(/\\?(.*)$/, '');\r\n                fragment = root !== '/' ? fragment.replace(root, '') : fragment;\r\n                fragment = RouteHelper._clearSlashes(fragment);\r\n            } else if (mode === 'hash') {\r\n                const match = _global.location.href.match(/#(.*)$/);\r\n                fragment = match ? match[1] : '';\r\n                fragment = RouteHelper._clearSlashes(fragment);\r\n            }\r\n\r\n            return fragment;\r\n        }\r\n    };\r\n\r\n\r\n    function applyNested(routes: any[]): Function {\r\n        return function(param: any) {\r\n            if (param === false) {\r\n                rollback = true;\r\n                router.navigate(lastURL);\r\n            } else if (typeof param === 'string') {\r\n                router.route(param);\r\n            } else if (routes && routes.length) {\r\n                apply(routes);\r\n            }\r\n        };\r\n    }\r\n\r\n    function apply(routes: any[]) {\r\n        if (routes) {\r\n            let falseToReject: boolean;\r\n            for (let i = 0; i < routes.length; i += 1) {\r\n                const route = routes[i];\r\n                if (route.rootRerouting) {\r\n                    falseToReject = route.callback.apply(null, route.params);\r\n                }\r\n                applyNested(route.routes)(falseToReject);\r\n            }\r\n        }\r\n    }\r\n\r\n    return router;\r\n\r\n})(new RoutingLevel());\r\n"]}